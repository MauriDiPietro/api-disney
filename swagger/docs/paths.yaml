paths:
  /auth/register:
    post:
      tags: 
      - Users
      summary: Registro de usuario nuevo en base de datos.
      parameters: 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyUsersPost'
        required: true
      responses:
        200:
          description: (OK) Se registró el usuario correctamente.
          content: 
            application/json:
              schema:
                $ref: '#/components/schema/User/CreateUserOk'
        400:
          description: (error) password incorrecta.
          $ref: '#/components/schema/User/PasswordIncorrect'
        500:
          description: error del servidor.
          $ref: '#/components/schema/User/NotFound'
  /auth/login:
    post:
      tags:
      - Users
      summary: Login de usuario previamente registrado en base de datos.
      parameters:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyLoginUsers'
        required: true
      responses:
        200:
          description: (OK) Login correcto.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/User/LoginOk'
        400:
          description: (error) password incorrecta.
          $ref: '#/components/schema/User/PasswordIncorrectLogin'
        500:
          description: error del servidor.
          $ref: '#/components/schema/User/NotFound'
  /characters:
    post:
      tags:
      - Characters
      summary: Creación de personajes.
      parameters: 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyCharactersPost'
        required: true
      responses:
        200:
          description: (OK) Creación correcta.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Character/CreateCharacterOk'
        404:
          description: (error) falta alguna propiedad del modelo.
          $ref: '#/components/schema/Character/CreateCharacterError'
        
  /characters/{characterId}/{filmId}:
    post:
      tags:
      - Characters
      summary: Agregar un film/movie/serie a un personaje.
      parameters:
        - in: path
          name: characterId
          required: true
          description: string ID required
          schema:
            type: string
        - in: path
          name: filmId
          required: true
          description: numeric ID required
          schema:
            type: integer
      example:
        characterId: jUHuj-68HGVy-u787655uBH-jjiHuu-HybUB8
        filmId: 3
      responses:
        200:
          description: Film agregado al personaje.
          content:
            application/json: 
              schema:
                $ref: '#/components/schema/Character/AddFilmToCharacter'
        404:
          description: No se encuentra el id.
          content:
            application/json: 
              schema:
                $ref: '#/components/schema/Character/ErrorAddFilmToCharacter'

  /characters/:
    get:
      tags:
      - Characters
      summary: Listar todos los personajes.
      responses:
        200:
          description: Lista de personajes guardados en base de datos.
          content:
            application/json: 
              schema:
                $ref: '#/components/schema/Character/getAllCharacters'
        500:
          description: 
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Character/ErrorGetAllCharacters'

  /characters/byid/{id}:
    get:
      tags:
      - Characters
      summary: Listar personaje por id.
      parameters:
        - in: path
          name: id
          required: true
          description: string ID required
          schema:
            type: string
      responses:
        200:
          description: Personaje encontrado por id.
          content:
            application/json: 
              schema:
                $ref: '#/components/schema/Character/getCharacterById'
        404:
          description: No se encuentra el id.
          content:
            application/json: 
              schema:
                $ref: '#/components/schema/Character/ErrorGetCharacterById'

        500:
          description: Error de servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Character/NotFound'

  /characters/byname?name={name}:
    get:
      tags:
      - Characters
      summary: Búsqueda de personajes por nombre (query params).
      parameters:
        - in: path
          name: name
          required: true
          description: string name required
          schema:
            type: string
      responses:
        200:
          description: Personaje encontrado por nombre.
          content:
            application/json: 
              schema:
                $ref: '#/components/schema/Character/getCharacterByName'
        404:
          description: No se encuentra el personaje.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Character/ErrorGetCharacterByName'
        500:
          description: Error de servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Character/NotFound'

  /characters/byfilms?filmId={filmId}:
    get:
      tags:
      - Characters
      summary: Filtrar personajes por film/movie/serie donde participó.
      parameters:
        - in: path
          name: filmId
          required: true
          description: integer filmId required
          schema:
            type: integer
      responses:
        200:
          description: Personajes encontrados por film.
          content:
            application/json: 
              schema:
                $ref: '#/components/schema/Character/getCharacterByFilm'
        404:
          description: No se encuentraron personajes en el film con el id:.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Character/ErrorGetCharacterByFilm'
        500:
          description: Error de servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Character/NotFound'

  /characters/byage?age={age}:
    get:
      tags:
      - Characters
      summary: Filtrar personajes por edad.
      parameters:
        - in: path
          name: age
          required: true
          description: integer age required
          schema:
            type: integer
      responses:
        200:
          description: Personajes encontrados por edad.
          content:
            application/json: 
              schema:
                $ref: '#/components/schema/Character/getCharacterByAge'
        404:
          description: No se encuentraron personajes en el film con el id:.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Character/ErrorGetCharacterByFilm'
        500:
          description: Error de servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Character/NotFound'
  /characters/:id:
    put:
      tags:
      - Characters
      summary: Editar personaje previamente guardado en base de datos.
  /characters/:id/:
    delete:
      tags:
      - Characters
      summary: Eliminar personaje previamente guardado en base de datos.
  /films:
    post:
      tags:
      - Films
      summary: Creación de película/serie.
  /films/:
    get:
      tags:
      - Films
      summary: Listar todos los films.
  /films/byid/:id:
    get:
      tags:
      - Films
      summary: Listar film por id.
  /films/byname?title=title:
    get:
      tags:
      - Films
      summary: Búsqueda de films por nombre.
  /films/bygenre?id=genreId:
    get:
      tags:
      - Films
      summary: Filtrar films por género.
  /films/order?order=ASC || DESC:
    get:
      tags:
      - Films
      summary: Ordenar films de manera ascendente o descendente.
  /films/detail/:id:
    get:
      tags:
      - Films
      summary: Mostrar film por id con sus personajes.
  /films/:id:
    put:
      tags:
      - Films
      summary: Editar film previamente guardado en base de datos.
  /films/:id/:
    delete: 
      tags:
      - Films
      summary: Eliminar film previamente guardado en base de datos.
  /genres:
    get:
      tags:
      - Genres
      summary: Listar géneros.
  /genres/:id:
    get:
      tags:
      - Genres
      summary: Listar género por id.
  /genres/:
    post:
      tags:
      - Genres
      summary: Crear género.